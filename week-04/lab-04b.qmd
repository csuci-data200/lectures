---
title: "Data 200: Lab 4a"
subtitle: "Return to the popular baby names data"
author: "Professor Medina"
format: 
  html:
    toc: true
knitr:
  opts_chunk:
    message: false
    warning: false
---

# Lab 1a

Now we have the knowledge to understand the code from lab 1a!

## Preface 

In this lab we explored popular baby names for the state of California.
This data comes from California birth certificates and is available on the [California Open Data Portal](https://data.ca.gov/dataset/most-popular-baby-names).

## Obtain and familiarize yourself with the data

```{r}
library(tidyverse)
```

This data is read in from a file called `california-popular-baby-names.csv` available online.
We will save this data into an **object** called `baby-names`.
```{r}
baby_names <- read_csv("http://csuci-data200.github.io/lectures/week-01/data/california-popular-baby-names.csv")
```

Let's look at what is in our `baby_names` object.
```{r}
baby_names
```

This dataset has 5 columns and 3,203 rows in total, which would be a lot to print, so only the first 10 are displayed.


For each year and specified sex at birth this data contains the 25 most popular baby first names and counts.
We have data for each year from 1960 to 2023.

Let's use this data to explore some questions.

## What were the 20 most popular baby names in 2023?

```{r}
baby_names |> 
  filter(Year == 2023) |>
  arrange(desc(Count)) |> 
  slice(1:20) |> 
  ggplot(aes(x = Count, y = reorder(Name, Count))) +
  geom_count() +
  geom_text(aes(label = Count), hjust = -0.25) +
  theme_minimal() +
  theme(legend.position = "none") +
  labs(
    x = "Number of babies born in 2023",
    y = "Name"
  ) +
  scale_x_discrete(expand = expansion(mult = c(0.05, 0.15)))
```

## What were the 20 most popular baby names in the year you were born?

In the Quarto document change the "2023" below to the year you were born and render the html again.
```{r}
baby_names |> 
  filter(Year == 2023) |>
  arrange(desc(Count)) |> 
  slice(1:20) |> 
  ggplot(aes(x = Count, y = reorder(Name, Count))) +
  geom_count() +
  geom_text(aes(label = Count), hjust = -0.25) +
  theme_minimal() +
  theme(legend.position = "none") +
  labs(
    x = "Number of babies born in 2023",
    y = "Name"
  ) +
  scale_x_discrete(expand = expansion(mult = c(0.05, 0.15)))
```
## What are the top 20 most popular baby names overall from all babies born between 1960-2023?

```{r}
all_names_plot <- baby_names |>
  group_by(Name) |> 
  summarise(total_count = sum(Count)) |> 
  arrange(desc(total_count)) |> 
  slice(1:20) |> 
  ggplot(aes(x = total_count, y = reorder(Name, total_count))) +
  geom_count() +
  geom_text(aes(label = total_count), hjust = -0.25) +
  theme_minimal() +
  theme(legend.position = "none") +
  labs(
    x = "Number of babies born from 1960-2023",
    y = "Name"
  ) +
  scale_x_discrete(expand = expansion(mult = c(0.05, 0.15)))

all_names_plot
```

## Is your name in the list of the most popular baby names?

```{r}
baby_names |> 
  pull(Name) |> 
  unique() |> 
  sort()
```



## Are the top 20 most popular baby names overall the same when we correct for truncation?

If you look into the **data dictionary** it says:
*Names in records from data years 1960 through 1977 are truncated to 8 characters, and 1978 through 2017 are truncated to 12 characters.* 
*For example, the names CHRISTINA, CHRISTINE, and CHRISTIN would all be included in CHRISTIN*.*

When we look at names across the entire time period we may get different results if we truncated all names to 8 characters.
This truncation is accounted for in the plot below.

```{r}
baby_names <- baby_names |> 
  mutate(name_fixed = case_when(
    str_length(Name) > 8 ~ (str_trunc(Name, width = 9, ellipsis = "*")),
    str_length(Name) <= 8 ~ Name
  )) 

corrected_all_names_plot <-  baby_names |> 
  group_by(name_fixed) |> 
  summarise(total_count = sum(Count)) |> 
  arrange(desc(total_count)) |> 
  slice(1:20) |> 
  ggplot(aes(x = total_count, y = reorder(name_fixed, total_count))) +
  geom_count() +
  geom_text(aes(label = total_count), hjust = -0.25) +
  theme_minimal() +
  theme(legend.position = "none") +
  labs(
    x = "Number of babies born from 1960-2023",
    y = "Corrected names"
  )  +
  scale_x_discrete(expand = expansion(mult = c(0.05, 0.15)))

gridExtra::grid.arrange(all_names_plot, corrected_all_names_plot, ncol = 2)
```


## How did the 5 overall most popular names change over the years?

```{r}
most_popular_names <- baby_names |> 
  group_by(name_fixed) |> 
  summarise(total_count = sum(Count)) |> 
  arrange(desc(total_count)) |> 
  slice(1:5) |> 
  pull(name_fixed)

baby_names |> 
  filter(name_fixed %in% most_popular_names) |> 
  ggplot(aes(x = Year, y = Count, color = name_fixed, linetype = name_fixed)) +
  geom_line(linewidth = 1) +
  theme_minimal() +
  labs(
    x = "Year",
    y = "Number of babies born",
    color = "Name",
    linetype = "Name"
  ) +
  ylim(0, 9000)
```


# New explorations

## Question 1

Let's start by cleaning up the variable names in the `baby_names` data frame to follow tidyverse style guide.


## Question 2

Let's clean up the data by dropping the variable `sex` and converting th variable `year` to an integer R type.


## Question 3

What is the average yearly number of babies born between the years 2000-2020 with the name "Daniel"?" Make sure to answer using inline R code.


## Question 4

Produce a plot to show how the number of babies named "Ashley" changed over the years. Make sure to provide nice axis labels, alternate text, and caption.


